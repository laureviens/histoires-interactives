[1mdiff --git a/Tests/tentative_jeu_ecrit_simple.cpp b/Tests/tentative_jeu_ecrit_simple.cpp[m
[1mnew file mode 100644[m
[1mindex 0000000..dcc2c1e[m
[1m--- /dev/null[m
[1m+++ b/Tests/tentative_jeu_ecrit_simple.cpp[m
[36m@@ -0,0 +1,95 @@[m
[32m+[m[32m/*[m
[32m+[m			[32m///||================================---2018/05/14---================================||\\\[m
[32m+[m[32m\\\||================================---Tentative de cadre pour fiction interactive---================================||///[m
[32m+[m[32m*/[m
[32m+[m
[32m+[m[32m//0) Inclure les bonnes library et utiliser les raccourcis pour standard[m
[32m+[m[32m#include <iostream>            //Librairie comprenant les fonctions d'entrée et de sortie de base[m
[32m+[m[32m#include <fcntl.h>             //Librairie comprenant la magie permettant d'afficher les unicodes dans la console[m[41m [m
[32m+[m[32musing namespace std;           //Pour faciliter l'utilisation de cout, cin, string, etc. (sans spécifier ces fonctions proviennent de quel enviro)[m
[32m+[m
[32m+[m[32m# include "C:/Users/Cyrille/Desktop/fictions_interactives_cplusplus/classe_vect_maison.cpp"  //Pour les vecteurs maisons vect[m
[32m+[m[32m# include "C:/Users/Cyrille/Desktop/fictions_interactives_cplusplus/fonction_find_maison.cpp"   //Pour la fonction find()[m
[32m+[m
[32m+[m
[32m+[m[32m//1) Gros brainstorm[m
[32m+[m[32m/*[m
[32m+[m
[32m+[m	[32m//i) De quoi je veux parler?[m
[32m+[m		[32mSimplement une fille qui lit les journaux sur son ordinateur dans sa chambre, la porte entrouverte.[m
[32m+[m		[32mLe chat de la maison [Crocus; ou nom aléatoire] entre.[m[41m [m
[32m+[m				[32m***Peut-être, si tout se passe bien, poursuivre en développant une personalité à Crocus??? (timide, arrogant, etc.)[m
[32m+[m		[32mEn fait, l'histoire commence par : "Tu l'entends avant de le voir" ou quelque chose de cliché, suivi des MAOOWww...[m
[32m+[m				[32m*** BTW, si tout se passe bien, les miaulements pourraient apparaîtrent en parallèle au reste du texte? De façon à le couper...[m
[32m+[m						[32m1) Je desc[m[41m [m
[32m+[m						[32m2) Je descends[m
[32m+[m						[32m        MIAAAAW[m
[32m+[m						[32m3) Je descends[m
[32m+[m						[32m        MIAAAAWWwouuuu[m[41m				[m
[32m+[m	[32m                                   l'escalier[m
[32m+[m						[32m3) Je descends[m
[32m+[m						[32m        MIAAAAWWwouuuuuuuuuuhhhh h h h h -h.[m[41m				[m
[32m+[m	[32m                                   l'escalier en évitant soigneusement la colle d'attention qui s'entre-faufile à mes pieds.[m
[32m+[m		[32mLe but du jeu serait simplement de faire taire le chat.[m
[32m+[m		[32m*** BTW il serait intéressant de jouer avec les couleurs, par exemple en ouvrant les rideaux fermés, faisant passer le background[m
[32m+[m			[32mou le texte de gris clair à blanc[m
[32m+[m		[32mPrioriser des actions simples, à répéter parfois (genre flatter le chat), qui ne mènent pas à de grandes narrations, mais qui changent les états.[m
[32m+[m		[32mFlatter le chat, Ignorer le chat, Ouvrir les rideaux, Fermer les rideaux, Se lever, Tasser le chat,[m[41m [m
[32m+[m[41m	[m
[32m+[m	[32m//ii) Quels sont les buts de l'exercice?[m
[32m+[m		[32mAu strict minimum, j'aimerais pouvoir simplement copier BOREALIS, avec une structure simple + plus modulaire (moins d'embranchement,[m
[32m+[m		[32mplus de phrases à placer partout).[m
[32m+[m[41m		[m
[32m+[m		[32mAu minimum, j'aimerais pouvoir avoir un jeu dynamique, dans lequel le bon moment peut passer sans que tu fasses quoi que ce soit.[m
[32m+[m		[32mQui n'a pas besoin d'attendre après lu joueuxe tout le temps; mais qui PEUX le faire quand c'est bénéfique à l'expérience.[m
[32m+[m		[32mÀ la limite, faire un semblant de "Far Cry 4", où la situation peut se régler si tu ne fais absolument rien (le chat se tanne).[m
[32m+[m[41m		[m
[32m+[m		[32mPour du défi, j'aimerais que certaines sorties d'écriture se fassent en parallèle (voir ci-dessus).[m
[32m+[m[41m		[m
[32m+[m		[32mPour compléter le portrait, j'aimerais pouvoir multiplier les caractéristiques "costumisables", pour des expériences différentes chaque fois.[m
[32m+[m[41m		[m
[32m+[m[41m	[m
[32m+[m	[32m//iii) Quelle est une structure projetée?[m
[32m+[m
[32m+[m		[32m-Compteurs à la volée[m
[32m+[m[41m		[m
[32m+[m				[32m-Compteur de temps:[m
[32m+[m					[32m-Depuis l'arrêt de l'exécution de n'importe quelle fonction[m
[32m+[m					[32m-Depuis certains moments spécifiques (bibliothèque de toutes les fonctions défuntes et leur temps d'arrêt?)[m
[32m+[m					[32m-Depuis l'écriture de la dernière lettre de ce parallèle[m
[32m+[m[41m					[m
[32m+[m				[32m-[m[41m	[m
[32m+[m[41m		[m
[32m+[m		[32m-Classe à créer (toutes)[m
[32m+[m[41m				[m
[32m+[m				[32m-Classe : phrase + conditions d'application[m
[32m+[m[41m				[m
[32m+[m				[32m-Classe : phrases/mots alternatives à utiliser?[m
[32m+[m[41m				[m
[32m+[m				[32m-Classe : Organisation des ordres d'apparition des phrases[m
[32m+[m							[32mex: "Il fait beau! Comment tu vas?" vs "Comment tu vas? Il fait beau!"[m
[32m+[m[41m							[m
[32m+[m						[32m//Va falloir DESSINER ce genre de choses pour pouvoir établir une structure claire.[m[41m		 [m
[32m+[m[41m				 [m
[32m+[m[41m				[m
[32m+[m				[32m-Classe : personnage + toutes ses caractéristiques aléatoires[m
[32m+[m[41m				[m
[32m+[m		[32m-Objets à créer (minimaux)[m
[32m+[m[41m		[m
[32m+[m				[32m-Objet conservant les différentes phrases (blocs de base) (avec chacune un ID unique)[m
[32m+[m[41m				[m
[32m+[m				[32m-Objet conservant les différentes structures[m
[32m+[m[41m				[m
[32m+[m				[32m-Objet compilant où on en est dans la strucutre[m
[32m+[m							[32m==Peut être intégré à l'objet conservant les structures![m
[32m+[m							[32mGenre; Structure 1: -Choisie? -Quels sont les phrases proposées (et leur ordre)? Quel est l'indexation actuelle (0,1,2,etc.)?[m
[32m+[m[41m				[m
[32m+[m				[32m-Objet compilant quelle idée (bloc de structures) a été présentée à date (on en est où dans l'histoire)[m
[32m+[m							[32m==Peut être intégré dans l'objet conservant les blocs de structures![m
[32m+[m							[32mGenre; Idée 1: -Faite? -Quels sont les blocs proposés?[m[41m  [m
[32m+[m									[32m==Intégrer également, dans l'objet conservant les blocs de structures,[m
[32m+[m									[32mun marqueur d'à quel "thread" appartient l'objet.[m
[32m+[m[41m				[m
[32m+[m[41m				[m
[32m+[m
[32m+[m[32m*/[m
[1mdiff --git a/classe_vect_maison.cpp b/classe_vect_maison.cpp[m
[1mindex e856626..1f14953 100644[m
[1m--- a/classe_vect_maison.cpp[m
[1m+++ b/classe_vect_maison.cpp[m
[36m@@ -4,17 +4,6 @@[m
 */[m
 [m
 /*			[m
[31m-		#### Je vais essayer de me débarrasser de la classe arr; car elle m'encombre et est redondante.[m
[31m-			 C'est bien, le code est ainsi beaucoup plus clair.	[m
[31m-[m
[31m-			 #### Le seul désavantage, c'est que je perds la définition facile des arrays (en une ligne).[m
[31m-			      Au moins, pour les strings, je vais avoir un moyen facile de définir tout ensemble de characters.[m
[31m-			      Pour les autres listes que je compte faire, elles seront probablement davantage des listes de "strings".[m
[31m-			      Ou peut-être pas. Je verrai rendue là si je réssucite les arr.[m
[31m-			  [m
[31m-	[m
[31m-		#### L'opérateur [] semble faire une job similaire à -, mais en plus efficace.[m
[31m-			 Penser à simplifier - (et peut-être +=)? basé sur cela.[m
 	[m
 		#### Il reste à créer une spécialisation de vect en vect<char>, qui prend des strings comme entrées (constructeur).[m
 			 Pour faire cela, je pourrais toujours overloader l'opérateur de "string litteral" ("").[m
[1mdiff --git a/fonction_find_maison.cpp b/fonction_find_maison.cpp[m
[1mindex 69c7bed..d580782 100644[m
[1m--- a/fonction_find_maison.cpp[m
[1m+++ b/fonction_find_maison.cpp[m
[36m@@ -1,6 +1,6 @@[m
 /*[m
[31m-///||================================---2018/0i/27---================================||\\\[m
[31m-\\\||================================---Cadre de travail pour histoires interactives---================================||///[m
[32m+[m			[32m///||================================---2018/0i/27---================================||\\\[m
[32m+[m[32m\\\||================================---Fonction find() personnalisée (strings)---================================||///[m
 */[m
 [m
 //0) Inclure les bonnes library et utiliser les raccourcis pour standard[m
[36m@@ -10,7 +10,7 @@[m [musing namespace std;           //Pour faciliter l'utilisation de cout, cin, stri[m
 # include "C:/Users/Cyrille/Desktop/fictions_interactives_cplusplus/classe_vect_maison.cpp"  //Pour les vecteurs maisons[m
 [m
 [m
[31m-//A) Fonction pour repérer des mots[m
[32m+[m[32m//1) Fonction pour repérer des mots[m
 //------------------------------------------------------------------------------------------------------------------------------------------------------[m
 				// x est le mot à repérer,[m
 				// p est la phrase dans laquelle repérer le mot[m
[36m@@ -98,7 +98,7 @@[m [musing namespace std;           //Pour faciliter l'utilisation de cout, cin, stri[m
 		}[m
 	}	[m
 [m
[31m-//Z) Test, en utilisant la fonction main() ; va être réécrit beaucoup, c'est juste pour voir si tout marche[m
[32m+[m[32m//2) Test[m
 int main()[m
 {[m
 	string x = "salade" ; string p = "J'aime la Salade."; ; string o = "J'aime la salade.";[m
[1mdiff --git a/fonction_read_maison.cpp b/fonction_read_maison.cpp[m
[1mnew file mode 100644[m
[1mindex 0000000..126bc80[m
[1m--- /dev/null[m
[1m+++ b/fonction_read_maison.cpp[m
[36m@@ -0,0 +1,277 @@[m
[32m+[m[32m/*[m
[32m+[m			[32m///||================================---2018/06/10---================================||\\\[m
[32m+[m[32m\\\||================================---Fonction read() pour créer des outputs à partir des canaux de lecture---================================||///[m
[32m+[m[32m*/[m
[32m+[m
[32m+[m
[32m+[m		[32m//ATTENTION!!!!![m
[32m+[m[41m		[m
[32m+[m[41m		[m
[32m+[m				[32m//Je viens de me rendre compte que, de la manière dont je calcule les lignes, ça ressemble à:[m
[32m+[m[41m				[m
[32m+[m				[32m/*[m
[32m+[m				[32m 0 1 2 3 4 5 6 7 8[m[41m [m
[32m+[m				[32m0[m
[32m+[m				[32m1[m
[32m+[m				[32m2[m
[32m+[m				[32m3[m
[32m+[m				[32m4[m
[32m+[m				[32m5[m
[32m+[m				[32m6[m
[32m+[m						[32mce qui peut être mélangeant pour l'axe des y. Just bear with me, though, j'pense que c'est la méthode la plus simple.[m
[32m+[m[41m				[m
[32m+[m				[32m*/[m
[32m+[m
[32m+[m
[32m+[m				[32m//ATTENTION!!!!!![m
[32m+[m						[32m//VOIR https://www.fluentcpp.com/2018/12/28/timer-cpp/[m
[32m+[m						[32m//POUR UN EXEMPLE DE TIMER AVEC DES THREADS (plutôt qu'avec une checkage constant, comme j'utilise)[m
[32m+[m
[32m+[m			[32m/*[m
[32m+[m			[32mÀ la fin, on arrive sur:[m
[32m+[m			[32m"The drawbacks of the library[m
[32m+[m				[32mWhy shouldnt we use this library in production? What do you think?[m
[32m+[m
[32m+[m				[32mOne issue is the very fact that it uses threads.[m[41m [m
[32m+[m				[32mIndeed, the JavaScript equivalent uses an event loop, and does not create a new thread[m[41m [m
[32m+[m				[32mfor each invocation of setTimeout or setInterval."[m
[32m+[m[41m			[m
[32m+[m			[32m*/[m
[32m+[m[41m			[m
[32m+[m[41m			[m
[32m+[m			[32m//ATTENTION!!!!!![m
[32m+[m					[32m//L'UTILISATION D'OBJETS time_t EST À CHANGER, CAR SA RÉSOLUTION EST EN SECONDES![m
[32m+[m[41m					[m
[32m+[m					[32m//Voir la librairie chrono pour millisecondes?[m
[32m+[m			[32m/*[m
[32m+[m			[32m    https://stackoverflow.com/questions/19555121/how-to-get-current-timestamp-in-milliseconds-since-1970-just-the-way-java-gets[m
[32m+[m			[32mIf you have access to the C++ 11 libraries, check out the std::chrono library.[m[41m [m
[32m+[m			[32mYou can use it to get the milliseconds since the Unix Epoch like this:[m
[32m+[m
[32m+[m		[32m#include <chrono>[m
[32m+[m[41m		[m
[32m+[m		[32m// ...[m
[32m+[m[41m		[m
[32m+[m		[32musing namespace std::chrono;[m
[32m+[m		[32mmilliseconds ms = duration_cast< milliseconds >([m
[32m+[m		[32m    system_clock::now().time_since_epoch()[m
[32m+[m		[32m);[m
[32m+[m			[32m*/[m
[32m+[m[41m			[m
[32m+[m[41m			[m
[32m+[m[41m			[m
[32m+[m			[32m//BTW:[m
[32m+[m						[32m//Voir https://www.fluentcpp.com/2019/05/07/output-strings-separated-commas-cpp/,[m
[32m+[m						[32m//qui fait quelque chose de similaire à ce que je fais, et qui nomme les objets créés pour servir d'interface[m
[32m+[m						[32m//entre la console et le code (dans mon code, ce seraient les canaux) des "curried objects"[m
[32m+[m
[32m+[m			[32m//BTW:[m
[32m+[m						[32m//Paraît que ce que je fais, c'est une "event-loop": https://en.wikipedia.org/wiki/Event_loop[m
[32m+[m[41m						[m
[32m+[m			[32m//Voir https://www.codeproject.com/Articles/1169105/Cplusplus-std-thread-Event-Loop-with-Message-Queue   ?[m
[32m+[m						[32m//À propos de event loop + multithreading[m
[32m+[m
[32m+[m
[32m+[m			[32m//BTW: Ce qui pourrait me sauver du multithreading:[m[41m [m
[32m+[m						[32m//Voir comment // From : https://www.dreamincode.net/forums/topic/228811-microsoft-using-console-functions-to-achieve-blinking-text/[m
[32m+[m								[32m// y arrive en utilisant les console handler[m[41m [m
[32m+[m[41m								[m
[32m+[m[41m								[m
[32m+[m			[32m//BTW: https://stackoverflow.com/questions/27582493/cin-without-waiting-for-input[m
[32m+[m[41m			[m
[32m+[m					[32m//Donc en bref, quand même utiliser le getch() du jeu simple avec le raton laveur, mais[m
[32m+[m							[32m//mettre son exécution conditionnelle à kbhit(), qui vérifie si une touche du keybord a été frappée?[m[41m					[m
[32m+[m
[32m+[m								[32m//Conclusion: la structure que j'écris est encore valide.[m
[32m+[m
[32m+[m[32m//------------------------------------------------------------------------------------------------------------------------------------------------------[m
[32m+[m[32m//0) Inclure les bonnes library et utiliser les raccourcis pour standard[m
[32m+[m[32m#include <iostream>   //Pour les entrées/sorties[m
[32m+[m[32m#include <string>     //Pour utiliser les objets strings[m
[32m+[m[32musing namespace std;           //Pour faciliter l'utilisation de cout, cin, string, etc. (sans spécifier ces fonctions proviennent de quel enviro)[m
[32m+[m
[32m+[m[32m# include "C:/Users/Cyrille/Desktop/fictions_interactives_cplusplus/classe_vect_maison.cpp"  //Pour les vecteurs maisons[m
[32m+[m
[32m+[m
[32m+[m[32m//------------------------------------------------------------------------------------------------------------------------------------------------------[m
[32m+[m[32m//1) Définir les objets de base sur lesquels va s'appuyer la suite[m
[32m+[m[41m	[m
[32m+[m	[32m//i) Classe : canal ; permet de sauvegarder la position de lecture du canal, le texte restant à lire, la vitesse, etc.[m
[32m+[m	[32mclass canal {[m
[32m+[m		[32m//Membres[m
[32m+[m		[32mpublic:[m
[32m+[m					[32m//Déclarer les objets de temps; ceux-ci seront manipulés majoritairement avec la fonction time(), pour laquelle la[m
[32m+[m						[32m//"value returned generally represents the number of seconds since 00:00 hours, Jan 1, 1970 UTC (i.e., the current unix timestamp)".[m
[32m+[m						[32m//http://www.cplusplus.com/reference/ctime/time/[m
[32m+[m			[32mtime_t nxtt;        //Déclarer le moment où la prochaine entrée sera traitée[m[41m         [m
[32m+[m			[32mtime_t delay;       //Déclarer le délai de base entre chaque entrée[m
[32m+[m			[32mint posx, posy;		//Déclarer les coordonnées de la dernière entrée dans la mémoire (la précédente)[m[41m   [m
[32m+[m								[32m//les positions de la consoles sont définies en décalant ces dernières[m
[32m+[m			[32mstring txt;         //Déclarer le texte qui reste à lire  					 //OU PEUT-ÊTRE UTILISER OBJET DE CLASSE VECT???????[m
[32m+[m			[32mbool actif;			//Déclarer le compteur d'activité[m
[32m+[m			[32mdouble vit;         //Déclarer la vitesse actuelle de défilement et de pauses (toujours par rapport à la base, 1)[m
[32m+[m		[32m//Constructeur[m
[32m+[m		[32mcanal() {nextt = time() ; delay = 0.4 ; posx = 1; posy = 1; actif = F; vit = 1}  //Créer un constructeur par défaut, pour initialiser tous les paramètres[m
[32m+[m	[32m};[m
[32m+[m
[32m+[m	[32m//ii) Classe : cons ; permet de sauvegarder les paramètres relatifs aux caractéristiques de la fenêtre de sortie (console)[m
[32m+[m	[32mclass fen {[m
[32m+[m		[32m//Membres[m
[32m+[m		[32mpublic:[m
[32m+[m			[32mint charx, chary;     //Déclarer les dimensions de la fenêtre en terme de nombre de caractères pouvant y être contenus[m
[32m+[m			[32mint consy;             //Déclarer le facteur de décalement de la console où apparaît le texte avec la mémoire, où il est stocké[m
[32m+[m			[32mbool refoule;          //Déclarer le flag pour voir si le facteur de décalement entre en compte[m
[32m+[m		[32m//Constructeurs[m
[32m+[m		[32mfen() {charx = 1; chary = 1; consy = 0; refoule = false;}      //Créer un constructeur par défaut, pour initialiser tous les paramètres[m
[32m+[m					[32m//À RETRAVAILLER POUR Y METTRE UNE FONCTION PERMETTANT DE DEVINER AUTOMATIQUEMENT LES DIMENSIONS DE LA FENÊTRE![m
[32m+[m		[32mfen(int x, int y) {charx = x; chary = y; consy = 0; refoule = false;}      //Créer un constructeur permettant d'assigner manuellement les dimensions de la fenêtre[m[41m	[m
[32m+[m	[32m};[m
[32m+[m		[32m//Créer l'objet base, qui contiendra les information sur la fenêtre de base[m
[32m+[m		[32mfen base;[m
[32m+[m
[32m+[m	[32m//iii) Objet : mem ; permet de sauvegarder la "mémoire" de la console, c'est-à-dire tous le texte s'y étant déjà inscrit[m
[32m+[m						[32m//PEUT-ÊTRE LE TRANSFORMER EN CLASSE POUR POUVOIR OVERRIDER UN OPÉRATEUR POUR AJOUTER DES LIGNES[m
[32m+[m		[32m//Déclarer l'objet[m[41m				[m
[32m+[m		[32mvect <char[base.charx]>	mem;[m
[32m+[m		[32m//Overrider l'opérateur %= afin de permettre d'ajouter une ligne vide à la position précise (en repoussant le reste vers le bas)[m[41m			[m
[32m+[m		[32m/*[m
[32m+[m		[32moperator %= (int pos) {                 //CECI OVERRIDE L'OPÉRATEUR POUR LA CLASSE VECT UTILISÉE! FAIRE UNE AUTRE VERSION DE VECT POUR L'INSÉRER???[m
[32m+[m			[32mi) Copier tout ce qu'on veut avant[m
[32m+[m			[32mii) Ajouter une ligne vide[m
[32m+[m			[32miii) Copier tout ce qui vient après (probablement en utilisant l'opérateur += ?)[m
[32m+[m		[32m}[m
[32m+[m		[32m*/[m
[32m+[m
[32m+[m
[32m+[m	[32m//iv) Fonction : extract ; extrait une valeur double d'une suite de caractères encadrés par '§' (pour extraire les codes spéciaux)[m
[32m+[m	[32mdouble extract(string str){[m
[32m+[m		[32mint lgstr = length(str)       	//Extraire la longueur du string[m[41m 		[m
[32m+[m		[32mstring nbonly;                  //Initier un nouveau string, dans lequel insérer seulement les chiffres[m
[32m+[m		[32mint a = 2;                      //Commencer à la position [2], le [0] étant occupé par '§' et le [1] par le type de valeur à extraire[m
[32m+[m		[32mwhile(str[a]!='§'&a<=lgstr) {nbonly += str[a];}[m
[32m+[m		[32mreturn(stod(nbonly));           //La fonction stod convertit les strings en doubles (https://stackoverflow.com/questions/4754011/c-string-to-double-conversion)[m
[32m+[m	[32m}[m[41m				[m
[32m+[m
[32m+[m	[32m//v) Objet : canaux ; assemblage de tous les canaux utilisés[m
[32m+[m	[32mvect<canal> canaux;[m
[32m+[m
[32m+[m[32m//------------------------------------------------------------------------------------------------------------------------------------------------------[m
[32m+[m[32m//2) Écrire la fonction read()[m
[32m+[m[32mread(canal can) {[m
[32m+[m	[32m//Interpréter les "codes spéciaux" (§...§)[m
[32m+[m	[32mif(can.txt[0]=='§'){[m
[32m+[m		[32mif(can.txt[1]=='p'){      //'p' pour "pause" -> ajouter une pause à la lecture[m
[32m+[m			[32mdouble val = extract(can.txt);       //Extraire le temps que durera la pause[m
[32m+[m			[32mcan.nxtt += val * can.vit         //Ajouter le temps d'attente[m
[32m+[m						[32m//VA PEUT-ÊTRE NÉCESSITER UNE CONVERSION DE DOUBLE À TIME_T[m
[32m+[m[41m						[m
[32m+[m								[32m//OUPS??? SELON https://stackoverflow.com/questions/31000399/convert-double-to-time-t,[m
[32m+[m								[32m//    time_t AURAIT COMME PLUS FINE RÉSOLUTION LA SECONDE????[m
[32m+[m		[32m} else if(can.txt[1]=='v'){      //'v' pour "vitesse" -> changer la vitesse de lecture[m
[32m+[m			[32m//Extraire la nouvelle vitesse[m
[32m+[m			[32mdouble val = extract(can.txt);[m
[32m+[m			[32mcan.vit = val;[m
[32m+[m		[32m}  //EN AJOUTER UN (code spécial) POUR PLACER LE CURSEUR À LA FIN DE LA CONSOLE[m
[32m+[m	[32m}[m
[32m+[m[32m} else {  //Interpréter le reste des caractères (pas des codes spéciaux)[m
[32m+[m	[32m//Dealer avec la situation où on a à sauter une ligne (créer les lignes supplémentaires et updater les diverses positions)[m
[32m+[m		[32mbool jump = false;[m
[32m+[m		[32mif(can.txt[0]=='\n'|can.posx>=base.charx) jump = true;[m
[32m+[m		[32mif(jump) {[m
[32m+[m[41m			[m
[32m+[m			[32m//BTW, JE NE PEUX PAS INSCRIRE '\N' DANS LA CONSOLE, JE CROIS, PARCE QUE ÇA PREND UN ESPACE???[m[41m [m
[32m+[m					[32m//ME SEMBLE, QUAND JE FAISAIS LE TEST AVEC LE RATON LAVEUR, SKIPPER UNE LIGNE À LA FIN SKIPPAIT EN FAIT DEUX LIGNES,[m
[32m+[m					[32m//car la console semblait marcher comme suit:[m[41m [m
[32m+[m						[32m//le curseur est bougé après que quoi que ce soit est écrit.[m
[32m+[m						[32m//Si c'est à la limite de la console, donc,[m
[32m+[m						[32m//                                          le curseur, indépendamment de ce qui s'en vient ensuite, sera[m
[32m+[m						[32m//DÉJÀ sur la ligne suivante. Donc le newline va arriver sur la ligne suivante, "skippant une ligne supplémentaire".[m
[32m+[m[41m						[m
[32m+[m					[32m//Ce que je me suis dit, c'est que la posx et posy seraient la PROCHAINE entrée dans la console.[m
[32m+[m					[32m//Mais ça marche difficilement. J'peux pas créer des nouvelles lignes vides pour rien, automatiquement à chaque fois qu'on[m
[32m+[m					[32m//arrive à la fin d'une ligne.[m
[32m+[m[41m					[m
[32m+[m					[32m//Ce qui marcherait bien, c'est que ces coordonnées représentent LA DERNIÈRE ENTRÉE.[m
[32m+[m					[32m//Comme ça, si on est rendues à la fin d'une ligne, on peut tout de suite aviser.[m
[32m+[m					[32m//Pis si on arrive au début d'une ligne, on n'a même pas à se demander si on est arrivé là automatiquement ou par '\n',[m[41m [m
[32m+[m					[32m//on fait juste continuer. Ce sera donc ça.[m
[32m+[m[41m		[m
[32m+[m			[32m//J'vais donc dealer avec écrire DANS la console après.    //Also parce que ça peut faire appel à ce qui est écrit dans la mémoire? non?[m
[32m+[m
[32m+[m[41m			[m
[32m+[m			[32m//Sauter une ligne dans la mémoire[m
[32m+[m			[32mfor(int countx = can.posx + 1; countx < base.charx ; countx++) mem [can.posy] [countx] = ' ';     //Effacer le reste de la ligne avec des espaces[m[41m    [m
[32m+[m			[32mmem %= can.posy;                         //Cet opérateur introduit une nouvelle ligne à la suite de la dernière position en y[m[41m			[m
[32m+[m			[32m//Updater le correctif de décalage de la console par rapport à la mémoire[m
[32m+[m				[32mif(base.refoule) base.consy++; else if(mem.nb>base.chary) {base.refoule = true; base.consy++;}[m[41m 					[m
[32m+[m			[32m//Sauter une ligne dans la console[m
[32m+[m				[32mif(!base.refoule) {          //La console n'est pas encore saturée: on pousse vers le bas![m
[32m+[m					[32mif(can.posy==mem.nb-1) {               //Si le canal gère la dernière ligne de la co